// <auto-generated />
using System;
using FirmaMVC.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FirmaMVC.Migrations
{
    [DbContext(typeof(DBContextModel))]
    [Migration("20190309174108_departamenty6")]
    partial class departamenty6
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FirmaMVC.Models.Employee.Address", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City");

                    b.Property<string>("HouseNumber");

                    b.Property<string>("Street");

                    b.Property<string>("ZIPcode");

                    b.HasKey("AddressId");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("FirmaMVC.Models.Employee.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Hierarchy");

                    b.Property<string>("Name");

                    b.Property<int>("Parent");

                    b.HasKey("DepartmentId");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("FirmaMVC.Models.Employee.Employee", b =>
                {
                    b.Property<int>("EmployyeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddressId");

                    b.Property<DateTime>("BirthDate");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.HasKey("EmployyeId");

                    b.HasIndex("AddressId")
                        .IsUnique();

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("FirmaMVC.Models.Employee.EmployeePosition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DepartmentId");

                    b.Property<int>("EmployeeId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("EmployeeId")
                        .IsUnique();

                    b.ToTable("EmployeePosition");
                });

            modelBuilder.Entity("FirmaMVC.Models.Employee.Phone", b =>
                {
                    b.Property<int>("PhoneId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PhoneNumber");

                    b.HasKey("PhoneId");

                    b.ToTable("Phone");
                });

            modelBuilder.Entity("FirmaMVC.Models.Employee.Room", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("RoomNumber");

                    b.HasKey("RoomId");

                    b.ToTable("Room");
                });

            modelBuilder.Entity("FirmaMVC.Models.Employee.Workplace", b =>
                {
                    b.Property<int>("WorkPlaceId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateOfEmployment");

                    b.Property<int>("EmplPositionId");

                    b.Property<int>("PhoneId");

                    b.Property<int>("RoomId");

                    b.Property<float>("YearSalary");

                    b.HasKey("WorkPlaceId");

                    b.HasIndex("EmplPositionId")
                        .IsUnique();

                    b.HasIndex("PhoneId")
                        .IsUnique();

                    b.HasIndex("RoomId")
                        .IsUnique();

                    b.ToTable("Workplace");
                });

            modelBuilder.Entity("FirmaMVC.Models.Employee.Employee", b =>
                {
                    b.HasOne("FirmaMVC.Models.Employee.Address", "Address")
                        .WithOne("Employee")
                        .HasForeignKey("FirmaMVC.Models.Employee.Employee", "AddressId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FirmaMVC.Models.Employee.EmployeePosition", b =>
                {
                    b.HasOne("FirmaMVC.Models.Employee.Department", "Department")
                        .WithMany("EmployeePositions")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FirmaMVC.Models.Employee.Employee", "Employee")
                        .WithOne("EmployeePosition")
                        .HasForeignKey("FirmaMVC.Models.Employee.EmployeePosition", "EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FirmaMVC.Models.Employee.Workplace", b =>
                {
                    b.HasOne("FirmaMVC.Models.Employee.EmployeePosition", "EmployeePosition")
                        .WithOne("Workplace")
                        .HasForeignKey("FirmaMVC.Models.Employee.Workplace", "EmplPositionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FirmaMVC.Models.Employee.Phone", "Phone")
                        .WithOne("Workplace")
                        .HasForeignKey("FirmaMVC.Models.Employee.Workplace", "PhoneId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FirmaMVC.Models.Employee.Room", "Room")
                        .WithOne("Workplace")
                        .HasForeignKey("FirmaMVC.Models.Employee.Workplace", "RoomId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
